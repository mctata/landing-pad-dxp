global:
  resolve_timeout: 5m
  # Customize notification settings below with actual email/slack endpoints
  smtp_smarthost: 'smtp.example.com:587'
  smtp_from: 'alerts@landing-pad.example.com'
  smtp_auth_username: 'username'
  smtp_auth_password: 'password'
  smtp_require_tls: true

# The root route on which each incoming alert enters.
route:
  group_by: ['alertname', 'job']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  receiver: 'email-notifications'
  routes:
    - match:
        severity: critical
      receiver: 'critical-alerts'
      continue: true

receivers:
  - name: 'email-notifications'
    email_configs:
      - to: 'alerts@landing-pad.example.com'
        send_resolved: true

  - name: 'critical-alerts'
    email_configs:
      - to: 'urgent-alerts@landing-pad.example.com'
        send_resolved: true
        
    # Slack configuration example (uncomment and adjust when ready)
    # slack_configs:
    #  - api_url: 'https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX'
    #    channel: '#monitoring-alerts'
    #    text: "{{ range .Alerts }}{{ .Annotations.description }}\n{{ end }}"
    #    send_resolved: true

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    # Apply inhibition if the alertname is the same.
    equal: ['alertname', 'instance']