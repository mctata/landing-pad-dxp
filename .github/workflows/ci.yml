name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: backend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint || true
    
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgres://test:test@localhost:5432/testdb
        JWT_SECRET: test-jwt-secret-for-ci
        API_KEY: test-api-key-for-ci
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: backend-test-results
        path: backend/test-results
      if: always()
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: backend/coverage
      if: always()

  frontend-test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint || true
    
    - name: Run tests
      run: npm test
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: frontend-test-results
        path: frontend/test-results
      if: always()

  build:
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
    
    - name: Root - Install dependencies
      run: npm ci
    
    - name: Backend - Install dependencies
      run: cd backend && npm ci
    
    - name: Frontend - Install dependencies
      run: cd frontend && npm ci
    
    - name: Build backend
      run: cd backend && npm run build --if-present
      env:
        DATABASE_URL: postgres://test:test@localhost:5432/testdb
        JWT_SECRET: test-jwt-secret-for-ci
        API_KEY: test-api-key-for-ci
    
    - name: Build frontend
      run: cd frontend && npm run build
      env:
        NEXT_PUBLIC_API_URL: http://localhost:3001
    
    - name: Package artifacts
      run: |
        mkdir -p artifacts
        cp -r backend/dist artifacts/backend || mkdir -p artifacts/backend
        cp -r frontend/.next artifacts/frontend
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: artifacts

  # Add deployment job if needed for specific environments
  # deploy-staging:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/develop'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: build-artifacts
  #       path: artifacts
  # 
  #   - name: Deploy to staging
  #     run: echo "Deploying to staging..."
  # 
  # deploy-production:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: build-artifacts
  #       path: artifacts
  # 
  #   - name: Deploy to production
  #     run: echo "Deploying to production..."
